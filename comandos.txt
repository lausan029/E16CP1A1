Crear una base de datos llamada call_list

       CREATE DATABASE call_list;

En la base de datos recien creada, crear la tabla users con los campos id (clave primaria), first_name, email.
	
			CREATE TABLE users(
					id serial PRIMARY KEY, 
					first_name VARCHAR (10),
					email VARCHAR (20)
				);

Ingresar un usuario, llamado Carlos (el resto de los datos deben inventarlos).

			INSERT INTO users VALUES ('Carlos', 'carlos@gmail.com');

Ingresar un usuario, llamada Laura (el resto de los datos deben inventarlos).

			INSERT INTO users VALUES ('Laura', 'laura@gmail.com');

Crear una tabla llamada calls con los campos id (clave primaria), phone, date, user_id (foreign key relacionado a users).

			CREATE TABLE calls(
					id serial PRIMARY KEY, 
					phone INTEGER,
					date TIMESTAMP,
					user_id  INTEGER,
					CONSTRAINT calls_fk FOREIGN KEY (user_id)
			      REFERENCES users (id) MATCH SIMPLE
			      ON UPDATE NO ACTION ON DELETE NO ACTION
			);

Agregar a la tabla users el campo last_name.

			ALTER TABLE users ADD last_name VARCHAR (20);

Ingresar el apellido del usuario Carlos.
	
			UPDATE users
			SET last_name = 'alejandro'
			WHERE first_name = 'Carlos';

Ingresar el apellido del usuario Laura.

			UPDATE users
			SET last_name = 'alejandra'
			WHERE first_name = 'Laura';

Ingresar 6 llamadas asociadas al usuario Laura.

			INSERT INTO calls ('phone', 'user_id' )VALUES ('55555555', 2);
			INSERT INTO calls ('phone', 'user_id' )VALUES ('55555555', 2);
			INSERT INTO calls ('phone', 'user_id' )VALUES ('22222222', 2);
			INSERT INTO calls ('phone', 'user_id' )VALUES ('33333333', 2);
			INSERT INTO calls ('phone', 'user_id' )VALUES ('44444444', 2);
			INSERT INTO calls ('phone', 'user_id' )VALUES ('55555555', 2);
			INSERT INTO calls ('phone', 'user_id' )VALUES ('66666666', 2);

Ingresar 4 llamadas asociadas al usuario Carlos.

			INSERT INTO calls ('phone', 'user_id' )VALUES ('55555555', 1);
			INSERT INTO calls ('phone', 'user_id' )VALUES ('55555555', 1);
			INSERT INTO calls ('phone', 'user_id' )VALUES ('22222222', 1);
			INSERT INTO calls ('phone', 'user_id' )VALUES ('33333333', 1);

Crear un nuevo usuario.

			INSERT INTO users VALUES ('Nuevo', 'nuevo@gmail.com');


Seleccionar la cantidad de llamados de cada uno de los usuarios (nombre de usuario y cantidad de llamadas).

			SELECT first_name, last_name, COUNT(phone) as phone_calls 
			FROM users 
			LEFT JOIN calls 
			ON (users.id = user_id) 
			GROUP BY first_name, last_name;

Seleccionar los llamados del usuario llamado Carlos ordenados por fecha en orden descendente.

			SELECT first_name, last_name, phone as phone_calls, date 
			FROM users 
			LEFT JOIN calls 
			ON (users.id = user_id) WHERE first_name = 'Carlos' 
			ORDER BY date DESC;

Nuevos cambios solicitados por cliente.
"Necesito agregar a la base una tabla de auditoría que registre el motivo del borrado de una llamada y el usuario que lo efectuó."


			CREATE TABLE auditor(
					id serial PRIMARY KEY, 
					description VARCHAR (20),
					user_id  INTEGER reference users (id),
					call_id  INTEGER reference calls (id),
					date TIMESTAMP,
			);

A partir de la base anterior, agregar este requerimiento y modelar la base de datos (agregar print de pantalla [utilizar https://www.draw.io/]).


Laura Sanchez
Lowtjie Rivero